// Code generated by goctl. DO NOT EDIT.
// goctl 1.9.1

package types

type BomEntryInfo struct {
	ID                 int64   `json:"id"`                 // BOM 条目的唯一ID
	ParentMaterialCode string  `json:"parentMaterialCode"` // 父物料编码
	ChildMaterialCode  string  `json:"childMaterialCode"`  // 子物料编码
	ChildMaterialName  string  `json:"childMaterialName"`  // (冗余) 子物料名称
	ChildMaterialSpec  string  `json:"childMaterialSpec"`  // (冗余) 子物料规格
	Quantity           float64 `json:"quantity"`           // 用量 (支持小数)
	Status             int     `json:"status"`             // 生效状态 (1:生效, 0:失效)
	CreatedAt          string  `json:"createdAt"`
	UpdatedAt          string  `json:"updatedAt"`
}

type CreateMaterialRequest struct {
	Code          string `json:"code"`          // 物料编码 (必填)
	Name          string `json:"name"`          // 物料名称 (必填)
	MaterialType  string `json:"materialType"`  // 物料类型 (必填)
	Spec          string `json:"spec"`          // 规格型号 (必填)
	Unit          string `json:"unit"`          // 单位 (必填)
	Price         int64  `json:"price"`         // 单价 (单位: 分) (必填)
	StockQuantity int    `json:"stockQuantity"` // 初始库存 (必填, 可以传 0)
	SupplierName  string `json:"supplierName"`  // 供应商 (必填)
}

type CreateOrUpdateBomEntryRequest struct {
	ParentMaterialCode string  `json:"parentMaterialCode"`
	ChildMaterialCode  string  `json:"childMaterialCode"`
	Quantity           float64 `json:"quantity"`
	Status             int     `json:"status,optional"` // 可选, 默认为 1 (生效)
}

type DeleteBomEntryRequest struct {
	ParentCode string `path:"parentCode"`
	ChildCode  string `path:"childCode"`
}

type GeneralSuccessResponse struct {
	Success bool `json:"success"`
}

type GetBomRequest struct {
	ParentCode string `path:"parentCode"` // 父物料的 Code
}

type GetBomResponse struct {
	Entries []BomEntryInfo `json:"entries"`
}

type ListMaterialsRequest struct {
	Page     int    `json:"page,optional"`     // 页码, 默认 1
	PageSize int    `json:"pageSize,optional"` // 每页数量, 默认 20
	Name     string `json:"name,optional"`     // 按物料名称模糊查询
}

type ListMaterialsResponse struct {
	Materials []MaterialInfo `json:"materials"`
	Total     int64          `json:"total"`
}

type MaterialInfo struct {
	Code          string `json:"code"`                  // 物料编码
	Name          string `json:"name"`                  // 物料名称
	MaterialType  string `json:"materialType,optional"` // 物料类型 (例如: 成品, 半成品, 原料)
	Spec          string `json:"spec,optional"`         // 规格型号
	Unit          string `json:"unit,optional"`         // 单位 (例如: 个, kg, 米)
	Price         int64  `json:"price"`                 // 单价 (单位: 分)
	StockQuantity int    `json:"stockQuantity"`         // 库存数量
	SupplierName  string `json:"supplierName,optional"` // 供应商
	CreatedAt     string `json:"createdAt"`             // 创建时间
	UpdatedAt     string `json:"updatedAt"`             // 更新时间
}

type MaterialRequest struct {
	Code string `path:"code"` // 从 URL 路径获取
}

type UpdateMaterialRequest struct {
	Code          string `path:"code"` // 从 URL 路径获取
	Name          string `json:"name,optional"`
	MaterialType  string `json:"materialType,optional"`
	Spec          string `json:"spec,optional"`
	Unit          string `json:"unit,optional"`
	Price         int64  `json:"price,optional"`
	StockQuantity int    `json:"stockQuantity,optional"`
	SupplierName  string `json:"supplierName,optional"`
}
