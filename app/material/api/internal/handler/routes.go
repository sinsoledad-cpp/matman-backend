// Code generated by goctl. DO NOT EDIT.
// goctl 1.9.1

package handler

import (
	"net/http"

	material "matman-backend/app/material/api/internal/handler/material"
	"matman-backend/app/material/api/internal/svc"

	"github.com/zeromicro/go-zero/rest"
)

func RegisterHandlers(server *rest.Server, serverCtx *svc.ServiceContext) {
	server.AddRoutes(
		[]rest.Route{
			{
				// 创建或更新BOM条目 (唯一键: parent/child)
				Method:  http.MethodPost,
				Path:    "/bom",
				Handler: material.CreateOrUpdateBomEntryHandler(serverCtx),
			},
			{
				// 获取一个父物料的BOM清单
				Method:  http.MethodGet,
				Path:    "/bom/:parentCode",
				Handler: material.GetBomHandler(serverCtx),
			},
			{
				// 删除一个BOM条目
				Method:  http.MethodDelete,
				Path:    "/bom/:parentCode/:childCode",
				Handler: material.DeleteBomEntryHandler(serverCtx),
			},
			{
				// 创建新物料
				Method:  http.MethodPost,
				Path:    "/materials",
				Handler: material.CreateMaterialHandler(serverCtx),
			},
			{
				// 获取物料列表 (分页/查询)
				Method:  http.MethodGet,
				Path:    "/materials",
				Handler: material.ListMaterialsHandler(serverCtx),
			},
			{
				// 更新物料 (根据 Code)
				Method:  http.MethodPut,
				Path:    "/materials/:code",
				Handler: material.UpdateMaterialHandler(serverCtx),
			},
			{
				// 删除物料 (根据 Code)
				Method:  http.MethodDelete,
				Path:    "/materials/:code",
				Handler: material.DeleteMaterialHandler(serverCtx),
			},
			{
				// 获取单个物料详情 (根据 Code)
				Method:  http.MethodGet,
				Path:    "/materials/:code",
				Handler: material.GetMaterialHandler(serverCtx),
			},
		},
		rest.WithPrefix("/api/v1/material"),
	)
}
